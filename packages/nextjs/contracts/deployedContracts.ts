/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    EscrowVerification: {
      address: "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_landNFT",
              type: "address",
            },
            {
              internalType: "address",
              name: "_verifiersContract",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
          ],
          name: "LandListedForSale",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "LandVerifiedForSale",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "PaymentMade",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "payee",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Withdrawn",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "cancelSale",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "landNFT",
          outputs: [
            {
              internalType: "contract IERC721",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "landSales",
          outputs: [
            {
              internalType: "address",
              name: "seller",
              type: "address",
            },
            {
              internalType: "address",
              name: "buyer",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "enum EscrowVerification.SaleStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "paymentStatus",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_price",
              type: "uint256",
            },
          ],
          name: "listLandForSale",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "makePayment",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "pendingWithdrawals",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "transferOwnershipAfterPayment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "verifiersContract",
          outputs: [
            {
              internalType: "contract VerifiersAndApprovers",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "verifyLandDetails",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    LandNFT: {
      address: "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_landRegistry",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "approved",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "ApprovalForAll",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_fromTokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_toTokenId",
              type: "uint256",
            },
          ],
          name: "BatchMetadataUpdate",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum LandNFT.TokenType",
              name: "tokenType",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "acres",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "decimals",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address[]",
              name: "owners",
              type: "address[]",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "ownershipPercentages",
              type: "uint256[]",
            },
          ],
          name: "LandTokenized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "MetadataUpdate",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "getApproved",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "getToken",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "enum LandNFT.TokenType",
              name: "",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
          ],
          name: "getTokensByPlot",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_thramNumber",
              type: "string",
            },
          ],
          name: "getTokensByThram",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
          ],
          name: "isApprovedForAll",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "landRegistry",
          outputs: [
            {
              internalType: "contract LandRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_acres",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_decimals",
              type: "uint256",
            },
            {
              internalType: "address[]",
              name: "_owners",
              type: "address[]",
            },
            {
              internalType: "string[]",
              name: "_userDids",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "_percentages",
              type: "uint256[]",
            },
          ],
          name: "mintFractionToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
            {
              internalType: "address[]",
              name: "_owners",
              type: "address[]",
            },
            {
              internalType: "string[]",
              name: "_userDids",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "_percentages",
              type: "uint256[]",
            },
          ],
          name: "mintPlotToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_thramNumber",
              type: "string",
            },
            {
              internalType: "address[]",
              name: "_owners",
              type: "address[]",
            },
            {
              internalType: "string[]",
              name: "_userDids",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "_percentages",
              type: "uint256[]",
            },
          ],
          name: "mintThramToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ownerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "setApprovalForAll",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "tokenURI",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        approve: "contracts/OwnershipCheck.sol",
        balanceOf: "contracts/OwnershipCheck.sol",
        getApproved: "contracts/OwnershipCheck.sol",
        isApprovedForAll: "contracts/OwnershipCheck.sol",
        name: "contracts/OwnershipCheck.sol",
        ownerOf: "contracts/OwnershipCheck.sol",
        safeTransferFrom: "contracts/OwnershipCheck.sol",
        setApprovalForAll: "contracts/OwnershipCheck.sol",
        supportsInterface: "contracts/OwnershipCheck.sol",
        symbol: "contracts/OwnershipCheck.sol",
        tokenURI: "contracts/OwnershipCheck.sol",
        transferFrom: "contracts/OwnershipCheck.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    LandRegistry: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_approver",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "acres",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "decimals",
              type: "uint256",
            },
          ],
          name: "LandFractionalized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              indexed: true,
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address[]",
              name: "owners",
              type: "address[]",
            },
            {
              indexed: false,
              internalType: "string[]",
              name: "userDids",
              type: "string[]",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalAreaInAcre",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalAreaInDecimal",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum LandRegistry.OwnershipType",
              name: "ownershipType",
              type: "uint8",
            },
          ],
          name: "LandRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              indexed: true,
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
          ],
          name: "LandVerified",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "approver",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_acresToFractionalize",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_decimalsToFractionalize",
              type: "uint256",
            },
          ],
          name: "fractionalizeLand",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
          ],
          name: "getLandByPlotNumber",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "address",
                      name: "ownerAddress",
                      type: "address",
                    },
                    {
                      internalType: "string",
                      name: "userDid",
                      type: "string",
                    },
                    {
                      internalType: "uint256",
                      name: "ownershipPercentage",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct LandRegistry.OwnerInfo[]",
                  name: "owners",
                  type: "tuple[]",
                },
                {
                  internalType: "string",
                  name: "thramNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "plotNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "location",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isVerified",
                  type: "bool",
                },
                {
                  internalType: "enum LandRegistry.OwnershipType",
                  name: "ownershipType",
                  type: "uint8",
                },
              ],
              internalType: "struct LandRegistry.LandDetails",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
          ],
          name: "getLandInfoByPlotNumber",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "thramNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "plotNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "location",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isVerified",
                  type: "bool",
                },
                {
                  internalType: "enum LandRegistry.OwnershipType",
                  name: "ownershipType",
                  type: "uint8",
                },
              ],
              internalType: "struct LandRegistry.BasicLandInfo",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
          ],
          name: "getLandOwnersByPlotNumber",
          outputs: [
            {
              internalType: "address[]",
              name: "ownerAddresses",
              type: "address[]",
            },
            {
              internalType: "string[]",
              name: "userDids",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_thramNumber",
              type: "string",
            },
          ],
          name: "getPlotsByThramNumber",
          outputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "address",
                      name: "ownerAddress",
                      type: "address",
                    },
                    {
                      internalType: "string",
                      name: "userDid",
                      type: "string",
                    },
                    {
                      internalType: "uint256",
                      name: "ownershipPercentage",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct LandRegistry.OwnerInfo[]",
                  name: "owners",
                  type: "tuple[]",
                },
                {
                  internalType: "string",
                  name: "thramNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "plotNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "location",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isVerified",
                  type: "bool",
                },
                {
                  internalType: "enum LandRegistry.OwnershipType",
                  name: "ownershipType",
                  type: "uint8",
                },
              ],
              internalType: "struct LandRegistry.LandDetails[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "landsByOwner",
          outputs: [
            {
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "totalAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
            {
              internalType: "enum LandRegistry.OwnershipType",
              name: "ownershipType",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "landsByPlotNumber",
          outputs: [
            {
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "totalAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
            {
              internalType: "enum LandRegistry.OwnershipType",
              name: "ownershipType",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "landsByThramNumber",
          outputs: [
            {
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "totalAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
            {
              internalType: "enum LandRegistry.OwnershipType",
              name: "ownershipType",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "landsByUserDid",
          outputs: [
            {
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "totalAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
            {
              internalType: "enum LandRegistry.OwnershipType",
              name: "ownershipType",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "_location",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_areaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_areaInDecimal",
              type: "uint256",
            },
            {
              internalType: "address[]",
              name: "_landOwnerAddresses",
              type: "address[]",
            },
            {
              internalType: "string[]",
              name: "_userDids",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "_ownershipPercentages",
              type: "uint256[]",
            },
            {
              internalType: "enum LandRegistry.OwnershipType",
              name: "_ownershipType",
              type: "uint8",
            },
          ],
          name: "registerLand",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalLandsRegistered",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
          ],
          name: "verifyLand",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    VerifiersAndApprovers: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "verifier",
              type: "address",
            },
          ],
          name: "BankVerified",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "verifier",
              type: "address",
            },
          ],
          name: "CourtVerified",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "LandFullyVerified",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "verifier",
              type: "address",
            },
          ],
          name: "TaxVerified",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "verifier",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "vType",
              type: "string",
            },
          ],
          name: "VerifierAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "verifier",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "vType",
              type: "string",
            },
          ],
          name: "VerifierRemoved",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
          ],
          name: "addBankVerifier",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
          ],
          name: "addCourtVerifier",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
          ],
          name: "addTaxVerifier",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "bankVerifiers",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "courtVerifiers",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "isLandVerified",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "landApprovals",
          outputs: [
            {
              internalType: "bool",
              name: "bankStatus",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "courtStatus",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "taxStatus",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
          ],
          name: "removeBankVerifier",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
          ],
          name: "removeCourtVerifier",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifier",
              type: "address",
            },
          ],
          name: "removeTaxVerifier",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "taxVerifiers",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "verifyBankStatus",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "verifyCourtStatus",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "verifyTaxStatus",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    VerifierSetup: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_verifiersContract",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "verifier",
              type: "address",
            },
            {
              indexed: false,
              internalType: "enum VerifierSetup.VerifierType",
              name: "vType",
              type: "uint8",
            },
          ],
          name: "VerifierAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "verifier",
              type: "address",
            },
            {
              indexed: false,
              internalType: "enum VerifierSetup.VerifierType",
              name: "vType",
              type: "uint8",
            },
          ],
          name: "VerifierRemoved",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "verifiers",
              type: "address[]",
            },
            {
              internalType: "enum VerifierSetup.VerifierType[]",
              name: "vTypes",
              type: "uint8[]",
            },
          ],
          name: "batchAddVerifiers",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "verifiers",
              type: "address[]",
            },
            {
              internalType: "enum VerifierSetup.VerifierType[]",
              name: "vTypes",
              type: "uint8[]",
            },
          ],
          name: "batchRemoveVerifiers",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferVerifiersOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "verifiersContract",
          outputs: [
            {
              internalType: "contract VerifiersAndApprovers",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  42161: {
    LandNFT: {
      address: "0xdF05027A9345a9c608e29b46425BC4307a70C50c",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_landRegistry",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "approved",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "ApprovalForAll",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_fromTokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "_toTokenId",
              type: "uint256",
            },
          ],
          name: "BatchMetadataUpdate",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum LandNFT.TokenType",
              name: "tokenType",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "acres",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "decimals",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address[]",
              name: "owners",
              type: "address[]",
            },
          ],
          name: "LandTokenized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "_tokenId",
              type: "uint256",
            },
          ],
          name: "MetadataUpdate",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "addJointOwner",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "getApproved",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
          ],
          name: "getTokensByPlot",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "tokenId",
                  type: "uint256",
                },
                {
                  internalType: "enum LandNFT.TokenType",
                  name: "tokenType",
                  type: "uint8",
                },
                {
                  internalType: "string",
                  name: "thramNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "plotNumber",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "acres",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "decimals",
                  type: "uint256",
                },
                {
                  internalType: "address[]",
                  name: "owners",
                  type: "address[]",
                },
                {
                  internalType: "uint256",
                  name: "creationTime",
                  type: "uint256",
                },
              ],
              internalType: "struct LandNFT.LandToken[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_thramNumber",
              type: "string",
            },
          ],
          name: "getTokensByThram",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "tokenId",
                  type: "uint256",
                },
                {
                  internalType: "enum LandNFT.TokenType",
                  name: "tokenType",
                  type: "uint8",
                },
                {
                  internalType: "string",
                  name: "thramNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "plotNumber",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "acres",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "decimals",
                  type: "uint256",
                },
                {
                  internalType: "address[]",
                  name: "owners",
                  type: "address[]",
                },
                {
                  internalType: "uint256",
                  name: "creationTime",
                  type: "uint256",
                },
              ],
              internalType: "struct LandNFT.LandToken[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
          ],
          name: "isApprovedForAll",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "landRegistry",
          outputs: [
            {
              internalType: "contract LandRegistry",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "landTokens",
          outputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "enum LandNFT.TokenType",
              name: "tokenType",
              type: "uint8",
            },
            {
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "acres",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "decimals",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "creationTime",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_acres",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_decimals",
              type: "uint256",
            },
            {
              internalType: "address[]",
              name: "_owners",
              type: "address[]",
            },
          ],
          name: "mintFractionToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
            {
              internalType: "address[]",
              name: "_owners",
              type: "address[]",
            },
          ],
          name: "mintPlotToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_thramNumber",
              type: "string",
            },
            {
              internalType: "address[]",
              name: "_owners",
              type: "address[]",
            },
          ],
          name: "mintThramToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "ownerOf",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "safeTransferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "setApprovalForAll",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes4",
              name: "interfaceId",
              type: "bytes4",
            },
          ],
          name: "supportsInterface",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "tokenIdsByPlot",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "tokenIdsByThram",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "tokenURI",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "tokenId",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        approve: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        balanceOf: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        getApproved: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        isApprovedForAll: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        name: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        ownerOf: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        safeTransferFrom: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        setApprovalForAll: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        supportsInterface: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        symbol: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        tokenURI: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        transferFrom: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
    LandRegistry: {
      address: "0x132CdfA6c95E84B028D55476d997eFe78dc9A728",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_approver",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "acres",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "decimals",
              type: "uint256",
            },
          ],
          name: "LandFractionalized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "landOwnerAddress",
              type: "address",
            },
            {
              indexed: true,
              internalType: "string",
              name: "userDid",
              type: "string",
            },
            {
              indexed: true,
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalAreaInAcre",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalAreaInDecimal",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
          ],
          name: "LandRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              indexed: true,
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
          ],
          name: "LandVerified",
          type: "event",
        },
        {
          inputs: [],
          name: "approver",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_acresToFractionalize",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_decimalsToFractionalize",
              type: "uint256",
            },
          ],
          name: "fractionalizeLand",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
          ],
          name: "getLandByPlotNumber",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "landOwnerAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "userDid",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "thramNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "plotNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "location",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isVerified",
                  type: "bool",
                },
              ],
              internalType: "struct LandRegistry.LandDetails",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          name: "getLandsByOwner",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "landOwnerAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "userDid",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "thramNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "plotNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "location",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isVerified",
                  type: "bool",
                },
              ],
              internalType: "struct LandRegistry.LandDetails[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_userDid",
              type: "string",
            },
          ],
          name: "getLandsByUserDid",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "landOwnerAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "userDid",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "thramNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "plotNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "location",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isVerified",
                  type: "bool",
                },
              ],
              internalType: "struct LandRegistry.LandDetails[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_thramNumber",
              type: "string",
            },
          ],
          name: "getPlotsByThramNumber",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "landOwnerAddress",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "userDid",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "thramNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "plotNumber",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "location",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInAcre",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "availableAreaInDecimal",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isVerified",
                  type: "bool",
                },
              ],
              internalType: "struct LandRegistry.LandDetails[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "landsByOwner",
          outputs: [
            {
              internalType: "address",
              name: "landOwnerAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "userDid",
              type: "string",
            },
            {
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "totalAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "landsByPlotNumber",
          outputs: [
            {
              internalType: "address",
              name: "landOwnerAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "userDid",
              type: "string",
            },
            {
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "totalAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "landsByThramNumber",
          outputs: [
            {
              internalType: "address",
              name: "landOwnerAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "userDid",
              type: "string",
            },
            {
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "totalAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "landsByUserDid",
          outputs: [
            {
              internalType: "address",
              name: "landOwnerAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "userDid",
              type: "string",
            },
            {
              internalType: "string",
              name: "thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "plotNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "location",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "totalAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "availableAreaInDecimal",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isVerified",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "_location",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_areaInAcre",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_areaInDecimal",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_landOwnerAddress",
              type: "address",
            },
            {
              internalType: "string",
              name: "_userDid",
              type: "string",
            },
          ],
          name: "registerLand",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_thramNumber",
              type: "string",
            },
            {
              internalType: "string",
              name: "_plotNumber",
              type: "string",
            },
          ],
          name: "verifyLand",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
